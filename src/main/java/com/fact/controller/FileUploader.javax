package com.fact.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MaxUploadSizeExceededException;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

@CrossOrigin(origins = "http://localhost:4200")
@Controller
public class FileUploader {

    List<String> files = new ArrayList<String>();
    private final Path rootLocation = Paths.get("/Users/mac/dev/ONSSA/e-facture-be/factures");

    @PostMapping("/savefile")
    public ResponseEntity<String> handleFileUpload(@RequestParam("file") MultipartFile file, @RequestParam("fileName") MultipartFile fileName) {
        String message;
        System.out.println("----File name: " + fileName);
        try {
            try {
                Files.copy(file.getInputStream(), this.rootLocation.resolve("file_name.pdf"));
                System.out.println(file.getName() + "file_name.pdf saved....");
            } catch (Exception e) {
                System.out.println("file_name.pdf not saved....");

                throw new RuntimeException("FAIL!");
            }
            files.add(file.getOriginalFilename());

            message = "Successfully uploaded!";
            return ResponseEntity.status(HttpStatus.OK).body(message);
        } catch (Exception e) {
            message = "Failed to upload!";
            return ResponseEntity.status(HttpStatus.EXPECTATION_FAILED).body(message);
        }
    }

    @GetMapping("/getfiles")
    public String  getFacturesFiles() {
        System.out.println("getFile calledd....");
        return "GetFiles Called";
    }


}